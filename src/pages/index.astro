---
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
import Hero from "../components/home/Hero.astro";
import Certification from "../components/home/Certification.astro";
import Jobs from "../components/home/Jobs.astro"
import Polaroids from "../components/home/Polaroids.astro";
---

<style lang="sass">
  section
    display: flex
    flex-direction: column
    justify-content: space-between
    height: 100vh
  .top-row
    display: flex
    width: 100%
    justify-content: space-between
    padding: 40px
  .bottom-row
    display: flex
    column-gap: 40px
    width: fit-content
    flex-direction: row
    padding: 40px
    @media (max-width: 1440px)
      flex-direction: column
      row-gap: 16px
    ul
      flex-direction: column
  .mobile-menu-overlay
    position: fixed
    width: 100vw
    height: 100vh
    background-color: rgba(127 214 119/ 80%)
    // background-color: black
    backdrop-filter: blur(1px)
    z-index: 99999
    clip-path: circle(100% at 50% 50%)

    display: flex
    padding: 40px
    flex-direction: column
    justify-content: flex-end
    p
      font-size: 24px
      @media (min-width: 1440px)
        display: none

</style>

<Layout pageTitle="rayyan eka putra | security and internet engineer">
  <section class="first">
    <div class="mobile-menu-overlay">
      <p><a href="https://www.linkedin.com/in/rayyan-eka-putra/">.linkedin</a></p>
      <p><a href="https://www.instagram.com/rayyanekaputra">.instagram</a></p>
      <p><a href="https://github.com/rayyanekaputra/">.github</a></p>
      <p><a href="https://dribbble.com/rayyanekaputra/">.dribbble</a></p>
      
    </div>
    <div class="top-row">
      <Hero />
      <Navbar
        navs={[
          {
            name: ".linkedin",
            link: "https://www.linkedin.com/in/rayyan-eka-putra/",
          },
          {
            name: ".instagram",
            link: "https://www.instagram.com/rayyanekaputra",
          },
          { name: ".github", link: "https://github.com/rayyanekaputra/" },
          {name: ".dribbble", link: "https://dribbble.com/rayyanekaputra"}
        ]}
      />
    </div>
    <div class="bottom-row">
      <Certification />
      <Jobs/>
    </div>
    <Polaroids />
  </section>
</Layout>
<script>
  //ANIMATION SCRIPTS
  import {
    animate,
    createTimeline,
    stagger,
    utils,
    createDraggable,
  } from "animejs";

  /*
  TIMELINE ANIMATION FOR HOME
  */
  let mobileMenuOverlay = document.querySelector(
    ".mobile-menu-overlay"
  ) as HTMLElement;
  let loadingTextEl = document.querySelector("#loading-text") as HTMLElement; //as HTMLElement gara2 typescript, baekji kalau tanpa itu
  let heroDescEl = document.querySelector(".hero-desc") as HTMLElement;
  let certItemsEl = document.querySelectorAll(".cert-item");
  let certTitleEl = document.querySelector(
    ".certification-title"
  ) as HTMLElement;

  let jobItemsEl = document.querySelectorAll(".job-item");
  let expTitleEl = document.querySelector(
    ".experience-title"
  ) as HTMLElement;

  // Store all drag instances in an array, btw objects, array, dan functions kalau disimpan dalam variable, itu pass-by-reference
  const dragInstances = [];

  //DRAGGING FUNCTION --> dipanggil di onComplete animasi Polaroids
  let polaroidCardsEl = document.querySelectorAll(".polaroid-card");
  const dragPolaroids = (el) =>
    createDraggable(el, {
      container: ".first",
    });

  let isMobileMenuOpen: boolean = false;
  const openMobileMenuAnim = () => {
    console.log("TERKLIK");
    animate(mobileMenuOverlay, {
      clipPath: `circle(${isMobileMenuOpen ? "0%" : "100%"} at 50% 50%)`,
      ease: "inOutExpo",
    });
    isMobileMenuOpen = !isMobileMenuOpen;
  };

  //MORE BUTTON --> RESET dan BUKA MENU
  let btnNavbarMobile = document.querySelector("button.navbar-mobile-btn");
  const navbarMoreButton = (draggingInstances) => {
    const handleMobileClick = () => {
      draggingInstances.forEach((draggingInstance) => draggingInstance.reset());
      openMobileMenuAnim();
    };
    btnNavbarMobile?.removeEventListener("click", handleMobileClick);
    btnNavbarMobile?.addEventListener("click", handleMobileClick);
    /*
    MOBILE MENU ANIMATION
    */
  };

  let tl = createTimeline({
    // duration: 1200,
  });
  tl.add(mobileMenuOverlay, {
    clipPath: "circle(0% at 50% 50%)",
    ease: "inOutExpo",
    delay: 300,
  })
    //ANIMASI LOADING
    .add(
      loadingTextEl,
      {
        innerText: "Loading " + [100] + "%",
        modifier: utils.roundPad(0),
        ease: "inOutExpo",
        duration: 2000,
        delay: 400,
        onComplete: () => heroDescEl.classList.remove("display-none"),
      },
      "<<"
    )
    // //HAPUS LOADING
    .add(loadingTextEl, {
      opacity: 0,
      ease: "inOutExpo",
      onComplete: () => {
        // console.log(heroDescEl);
        loadingTextEl.classList.add("transparent", "display-none");
      },
    })
    //MASUKKAN HERO DESC
    .add(heroDescEl, {
      opacity: 1,
      ease: "inOutExpo",
      onComplete: () => {
        // console.log(heroDescEl);
      },
    })
    //MASUKKAN CERTIFICATION TITLE
    .add(certTitleEl, {
      opacity: 1,
      delay: stagger(100),
      ease: "inOutExpo",
      onComplete: () => {
        certTitleEl.classList.remove("transparent");
      },
    })
    //MASUKKAN CERTIFICATIONS
    .add(certItemsEl, {
      opacity: 1,
      delay: stagger(100),
      ease: "inOutExpo",
      onComplete: () => {
        certItemsEl.forEach((certItemEl) => {
          //remove satu2 njo kelas transparentna
          // console.log(certItemEl);
          certItemEl.classList.remove("transparent");
        });
      },
    })
    //MASUKKAN EXPERIENCE TITLE
    .add(expTitleEl, {
      opacity: 1,
      delay: stagger(100),
      ease: "inOutExpo",
      onComplete: () => {
        expTitleEl.classList.remove("transparent");
      },
    })
    //MASUKKAN JOB
    .add(jobItemsEl, {
      opacity: 1,
      delay: stagger(100),
      ease: "inOutExpo",
      onComplete: () => {
        jobItemsEl.forEach((jobItemEl) => {
          //remove satu2 njo kelas transparentna
          // console.log(certItemEl);
          jobItemEl.classList.remove("transparent");
        });
      },
    })
    //POLAROIDS MUNCUL
    .add(polaroidCardsEl, {
      opacity: 1,
      delay: stagger(100),
      ease: "inOutExpo",
      onComplete: () => {
        //POLAROIDS DRAGGABLE
        polaroidCardsEl.forEach((cardEl) => {
          const dragMe = dragPolaroids(cardEl);
          dragInstances.push(dragMe); // Store the instance's reference
        });
      },
    });
  navbarMoreButton(dragInstances); // Pass all instances
</script>
<script src="../scripts/typer.js"></script>
