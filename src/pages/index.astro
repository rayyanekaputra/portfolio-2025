---
import Layout from "../layouts/Layout.astro";
import Navbar from "../components/Navbar.astro";
import Hero from "../components/home/Hero.astro";
import Certification from "../components/home/Certification.astro";
import Polaroids from "../components/home/Polaroids.astro"
---

<style lang="sass">
  section
    display: flex
    flex-direction: column
    justify-content: space-between
    height: 100vh
  .top-row
    display: flex
    width: 100%
    justify-content: space-between
    padding: 40px
  .bottom-row
    display: flex
    width: fit-content
    flex-direction: column
    padding: 40px
    ul
      flex-direction: column
    </style>

<Layout pageTitle="Rayyan Eka Putra | Security & Internet Engineer">
  <section class="first">
    <div class="top-row">
      <Hero />
      <Navbar
        navs={[
          {
            name: ".linkedin",
            link: "https://www.linkedin.com/in/rayyan-eka-putra/",
          },
          {
            name: ".instagram",
            link: "https://www.instagram.com/rayyanekaputram",
          },
          { name: ".github", link: "https://github.com/rayyanekaputra/" },
        ]}
      />
      </div>
    <div class="bottom-row">
     <Certification></Certification>
    </div>
    <Polaroids></Polaroids>
  </section>
</Layout>
<script>
  import {
    animate,
    createTimeline,
    stagger,
    utils,
    createDraggable,
  } from "animejs";

  var loadingTextEl = document.querySelector("#loading-text") as HTMLElement; //as HTMLElement gara2 typescript, baekji kalau tanpa itu
  var heroDescEl = document.querySelector(".hero-desc") as HTMLElement;
  var certItemsEl = document.querySelectorAll(".cert-item");
  var certTitleEl = document.querySelector(
    ".certification-title"
  ) as HTMLElement;
  var polaroidCardsEl = document.querySelectorAll(".polaroid-card");

  var tl = createTimeline({
    // duration: 1200,
  });
  tl
    //ANIMASI LOADING
    .add(loadingTextEl, {
      innerText: "Loading " + [100] + "%",
      modifier: utils.roundPad(0),
      ease: "inOutExpo",
      duration: 2000,
      delay: 400,
      onComplete: () => heroDescEl.classList.remove("display-none"),
    })
    // //HAPUS LOADING
    .add(loadingTextEl, {
      opacity: 0,
      ease: "inOutExpo",
      onComplete: () => {
        // console.log(heroDescEl);
        loadingTextEl.classList.add("transparent", "display-none");
      },
    })
    //MASUKKAN HERO DESC
    .add(heroDescEl, {
      opacity: 1,
      ease: "inOutExpo",
      onComplete: () => {
        // console.log(heroDescEl);
      },
    })
    //MASUKKAN CERTIFICATION TITLE
    .add(certTitleEl, {
      opacity: 1,
      delay: stagger(100),
      ease: "inOutExpo",
      onComplete: () => {
        certTitleEl.classList.remove("transparent");
      },
    })
    //MASUKKAN CERTIFICATIONS
    .add(certItemsEl, {
      opacity: 1,
      delay: stagger(100),
      ease: "inOutExpo",
      onComplete: () => {
        certItemsEl.forEach((certItemEl) => {
          //remove satu2 njo kelas transparentna
          // console.log(certItemEl);
          certItemEl.classList.remove("transparent");
        });
      },
    })
    //POLAROIDS
    .add(polaroidCardsEl, {
      opacity: 1,
      delay: stagger(100),
      ease: "inOutExpo",
      onComplete: () => {
        //DRAGABLES
        polaroidCardsEl.forEach((cardEl) => {
          let grabs = 0;
          const dragPolaroids = createDraggable(cardEl, {
            container: ".first",
            onGrab: () => console.log(++grabs),
          });
          // dragPolaroids
          //   .setX(utils.random(-100, 100))
          //   .setY(utils.random(-100, 100));
        });
      },
    });
</script>
<script src="../scripts/typer.js"></script>
